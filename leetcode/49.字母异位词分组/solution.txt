# 给定一个字符串数组，将字母异位词组合在一起。字母异位词指字母相同，但排列不同的字符串。
#
# 示例:
#
# 输入: ["eat", "tea", "tan", "ate", "nat", "bat"],
# 输出:
# [
#   ["ate","eat","tea"],
#   ["nat","tan"],
#   ["bat"]
# ]
# 说明：
#
# 所有输入均为小写字母。
# 不考虑答案输出的顺序。

package cn.edu.nju.software.lx;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

class Solution {

    public static void main(String[] args){
        String[] strs = {"boo", "bob"};
        groupAnagrams(strs);
    }

    public static List<List<String>> groupAnagrams(String[] strs) {
        int[] times = new int[26];
        Map<String, List<String>> map = new HashMap<>();

        for (String word: strs) {
            char[] chrs = word.toCharArray();
            for (char ch: chrs) {
                times[ch - 'a'] += 1;
            }

            StringBuilder sb = new StringBuilder();
            for(int i=0; i<26; i++){
                if(times[i] != 0){
                    sb.append((char)('a' + i));
                    sb.append(times[i]);
                    times[i] = 0;
                }
            }

            String key = sb.toString();
            if(map.containsKey(key)){
                map.get(key).add(word);
            }else {
                List<String> newValue = new ArrayList<>();
                newValue.add(word);
                map.put(key, newValue);
            }
        }

        return new ArrayList<>(map.values());
    }
}


